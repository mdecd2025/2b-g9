var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 2b 第9組網站:\xa0 mdecd2025.github.io/2b-g9/ \n 2b 第9組倉儲:  https://github.com/mdecd2025/2b-g9 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Tasks', 'text': '', 'tags': '', 'url': 'Tasks.html'}, {'title': 'task1', 'text': 'list \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n \n', 'tags': '', 'url': 'task1.html'}, {'title': 'task2', 'text': 'list \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'task2.html'}, {'title': 'task2-2', 'text': 'list \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n \n', 'tags': '', 'url': 'task2-2.html'}, {'title': 'task2-3', 'text': 'list \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n', 'tags': '', 'url': 'task2-3.html'}, {'title': 'task3', 'text': '\n \n \n \n 連桿1、3圖檔 \n 連趕2、4圖檔 \n', 'tags': '', 'url': 'task3.html'}, {'title': 'Exam', 'text': '', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam3', 'text': '各組員操作及心得', 'tags': '', 'url': 'Exam3.html'}, {'title': '41023206-操作及心得', 'text': 'Exam3-1 \n \n 開啟ipv6後,在cmd輸入\xa0 webotsw --stream 開啟webots，webots會給一個port ( INFO: Streaming server listening on port 1235. )。 \n 有port之後再瀏覽器貼上\xa0http://[自己ipv6]:webots給的port/index.html，就能啟動串流。  \nAdd commentMore actions\n 若要開啟組員的串流，在webots\xa0streaming viwer中的 connect to 填入\xa0ws://[ 組員ipv6 ]: 組員port號 \xa0 就能看到組員畫面了。 \n \n \n \n Exam3-2 \n \n 開啟ipv6後,在cmd輸入\xa0 webotsw --stream 開啟webots，webots會給一個port ( INFO: Streaming server listening on port 1236. )。 \n 在瀏覽器貼上\xa0http://[ 自己ipv6 ]: webots給的port /index.html，就能啟動串流。  \n 若要開啟組員的串流，在webots\xa0streaming viwer中的 connect to 填入\xa0ws://[ 組員ipv6 ]: 組員port號 \xa0 就能看到組員畫面了。 \n \n \n \n Exam3-3 \n \n 在cmd輸入\xa0 webotsw --stream 開啟webots \n 輸入 pip install websocket-client websocket-server keyboard \n 在cmd輸入\xa0 webotsw --stream 開啟webots串流 \n 同樣在cmd中輸入 pip install websocket-client websocket-server keyboard \n 在瀏覽器貼上\xa0http://[ 自己ipv6 ]: webots給的port /index.html \n 在webots\xa0streaming viwer中的 connect to 填入\xa0ws://[ 組員ipv6 ]: 組員port號\xa0\xa0 \n 看到組長的畫面後在SciTE 中開啟\xa0 youbot_cartclient.py \n 修改其中的\xa0\xa0server_ip = "your_ipv6_address"\xa0 ，your_ipv6_address 改為組長IPV6 \n 選tool 中的GO ，就能在 webots\xa0streaming viwe 操作YOUBOT進行移動 \n \n \n \n 心得:一開始還不懂要怎麼用串流，在chatgpt、copliot上問了許多問題也沒有解決，經過詢問組長後有成功做出來了。', 'tags': '', 'url': '41023206-操作及心得.html'}, {'title': '41023232-Exam3操作及心得', 'text': 'EXAM3-1 \n 在控制台設好自己的 IPv6 網址關掉 IPv4 網址以 \xa0webotsw --stream\xa0 啟動個人所完成的 \xa0HW1\xa0 模擬系統查看各自 webots 的端口在網頁上輸入 http:[ 自己的 IPv6 網址 ]: 查看各自 webots 的端口 /index.html 在 Connect to 內輸入 [ 自己的 IPv6 網址 ]:\xa0 查看各自 webots 的端口按下 Connect 即可看到自己 webots 的畫面按下 Disconnec 到 Connect to 內輸入 [ 組員的 IPv6 網址 ]:\xa0 組員 webots 的端口 \n \n 一開始在修改IPV6時改了錯的網路IP導致只能連上自己的畫面卻沒辦法連到別人的，發現問題後就很順利的看到組員的畫面了 \n EXAM3-2 \n 在控制台設好自己的 IPv6 網址 關掉 IPv4 網址\xa0 以 \xa0webotsw --stream\xa0 啟動 七段顯示器進行修改 模擬系統\xa0 查看各自 webots 的端口\xa0 在網頁上輸入 http:[ 自己的 IPv6 網址 ]: 查看各自 webots 的端口 /index.html\xa0 在 Connect to 內輸入 [ 自己的 IPv6 網址 ]:\xa0 查看各自 webots 的端口 按下 Connect 即可看到自己 webots 的畫面 按下 Disconnec 到 Connect to 內輸入 [ 組員的 IPv6 網址 ]:\xa0 組員 webots 的端口 \n \n 第二個大致跟第一相同只是變成修改七段顯示器秀出自己學號而已沒遇到什麼困難 \n EXAM3-3 \n 在控制台設好自己的 IPv6 網址 關掉 IPv4 網址\xa0 以 \xa0webotsw --stream \n 執行指令pip install websocket-client websocket-server keyboard \n 組長開啟youbot_cart_w10_websocket.7z場景 \n 組長把場景中的controller選 youbot_cart_server.py並把server_ip = "yout_ipv6_address改成server_ip = "::" \n 組員執行python youbot_cartclient.py並把IP設定成組長的IP \n 在網頁上輸入 http:[自己 的 IPv6 網址 ]: 查看各自 webots 的端口 /index.html\xa0 在 Connect to 內輸入 [組長 的 IPv6 網址 ]:\xa0 查看各自 webots 的端口 按下 Connect 即可看到組長 webots畫面 \n 按下上下左右即可操作機器人 \n \n 對於要怎麼利用 websocket連線操作一開始完全沒頭緒在看其他同學的操作步驟後順利連線上了', 'tags': '', 'url': '41023232-Exam3操作及心得.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Final process', 'text': '06/13： \n 修改feed_ball_loop.py參數餵球上限： \n from controller \n# ----------------- 參數區 -----------------\nHOOP_CENTER = [0.622, -0.103, 0.742838]\nBALL_DEF_PATTERN = re.compile(r"Sphere_\\d+")\nsupervisor = Supervisor()\ntimestep = int(supervisor.getBasicTimeStep())\nkeyboard = Keyboard()\nkeyboard.enable(timestep)\nMAX_BALLS_ALLOWED = 3\nball_count = 0\nwarning_shown = False\nlanded_balls = []  # [(def_name, landed_time)]\nDELETE_DELAY = 2.0  # 秒\n# ----------------- 建立靜態球體 -----------------\ndef create_static_sphere(supervisor, x, y, z):\n    global waiting_ball_def, waiting_ball_info, ball_count, warning_shown\n    if ball_count >= MAX_BALLS_ALLOWED:\n        if not warning_shown:\n            print(f"球數已達上限 ({MAX_BALLS_ALLOWED})，請謹慎地擊出最後一球。")\n            warning_shown = True\n        return\n\n    warning_shown = False  # 可以新增球，代表之前的提示已失效\n    def_name = generate_valid_def_name()\n    waiting_ball_def = def_name\n    r, g, b = generate_random_color()\n    world_pos = youbot_local_to_world((x, y, z))\n    waiting_ball_info = (world_pos, r, g, b)\n    create_static_ball(def_name, world_pos, r, g, b)\n    ball_count += 1\n# ----------------- 定義球落地 -----------------\ndef is_ball_landed(pos, threshold_z=0.13):\n    return pos[2] < threshold_z\n\nprint("按 A 產生一顆靜止球，按 M 讓球變 dynamic 可擊出（自動與手動均可，多5個軌跡點，球落地後軌跡自動消失）")\n\nwhile supervisor.step(timestep) != -1:\n    # 1. 處理 auto_loop.py 傳來的自動訊息\n    while receiver.getQueueLength() > 0:\n        msg = receiver.getString()\n        if msg == "a":\n            if waiting_ball_def is None:\n                create_static_sphere(supervisor, *default_feed_pos)\n                current_tracked_def = waiting_ball_def\n                delete_trajectory_points()\n        elif msg == "m":\n            activate_dynamic_ball()\n        # "k" 可選，通常給擊球機構用，這邊可忽略或加狀態清理\n        receiver.nextPacket()\n\n    # 2. 處理手動鍵盤控制\n    key = keyboard.getKey()\n    current_time = time.time()\n    if key == ord(\'A\') and (current_time - last_key_time >= debounce_time):\n        if waiting_ball_def is None:\n            create_static_sphere(supervisor, *default_feed_pos)\n            current_tracked_def = waiting_ball_def\n            delete_trajectory_points()\n        else:\n            print("還有一顆球等待擊出，請先擊出再產生新球。")\n        last_key_time = current_time\n    if key == ord(\'M\') and (current_time - last_key_time >= debounce_time):\n        activate_dynamic_ball()\n        last_key_time = current_time\n\n    # 3. 拋物線軌跡追蹤\n    if current_tracked_def is not None:\n        ball_node = supervisor.getFromDef(current_tracked_def)\n        if ball_node is not None:\n            pos = ball_node.getPosition()\n            if current_time - last_print_time >= PRINT_INTERVAL:\n                last_print_time = current_time\n            if (not trajectory_points) or np.linalg.norm(np.array(pos) - np.array(trajectory_points[-1][0])) > TRAJECTORY_POINT_STEP:\n                def_name = create_trajectory_point(pos)\n                trajectory_points.append((pos, def_name))\n                if len(trajectory_points) > TRAJECTORY_MAX_POINTS:\n                    _, old_def = trajectory_points.pop(0)\n                    node = supervisor.getFromDef(old_def)\n                    if node:\n                        node.remove()\n            if is_ball_landed(pos):\n                delete_trajectory_points()\n                landed_balls.append((current_tracked_def, time.time()))\n                current_tracked_def = None\n                ball_count = max(0, ball_count - 1)\n\n\n\n        else:\n            delete_trajectory_points()\n            current_tracked_def = None\n# ----------------- 處理落地球延遲刪除 -----------------            \n    now = time.time()\n    for def_name, landed_time in landed_balls[:]:\n        if now - landed_time >= DELETE_DELAY:\n            node = supervisor.getFromDef(def_name)\n            if node:\n                node.remove()\n            landed_balls.remove((def_name, landed_time)) \n Q：目前模擬結果無法刪除球sphere實體。 \n 檔案： 2b-g9final.7z', 'tags': '', 'url': 'Final process.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};